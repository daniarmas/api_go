// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: main.proto

package api_grpc_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchMunicipalityType int32

const (
	SearchMunicipalityType_SearchMunicipalityTypeUnspecified SearchMunicipalityType = 0
	SearchMunicipalityType_More                              SearchMunicipalityType = 1
	SearchMunicipalityType_NoMore                            SearchMunicipalityType = 2
)

// Enum value maps for SearchMunicipalityType.
var (
	SearchMunicipalityType_name = map[int32]string{
		0: "SearchMunicipalityTypeUnspecified",
		1: "More",
		2: "NoMore",
	}
	SearchMunicipalityType_value = map[string]int32{
		"SearchMunicipalityTypeUnspecified": 0,
		"More":                              1,
		"NoMore":                            2,
	}
)

func (x SearchMunicipalityType) Enum() *SearchMunicipalityType {
	p := new(SearchMunicipalityType)
	*p = x
	return p
}

func (x SearchMunicipalityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchMunicipalityType) Descriptor() protoreflect.EnumDescriptor {
	return file_main_proto_enumTypes[0].Descriptor()
}

func (SearchMunicipalityType) Type() protoreflect.EnumType {
	return &file_main_proto_enumTypes[0]
}

func (x SearchMunicipalityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchMunicipalityType.Descriptor instead.
func (SearchMunicipalityType) EnumDescriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{0}
}

type VerificationCodeType int32

const (
	VerificationCodeType_VerificationCodeTypeUnspecified VerificationCodeType = 0
	VerificationCodeType_SignIn                          VerificationCodeType = 1
	VerificationCodeType_SignUp                          VerificationCodeType = 2
	VerificationCodeType_ChangeUserEmail                 VerificationCodeType = 3
)

// Enum value maps for VerificationCodeType.
var (
	VerificationCodeType_name = map[int32]string{
		0: "VerificationCodeTypeUnspecified",
		1: "SignIn",
		2: "SignUp",
		3: "ChangeUserEmail",
	}
	VerificationCodeType_value = map[string]int32{
		"VerificationCodeTypeUnspecified": 0,
		"SignIn":                          1,
		"SignUp":                          2,
		"ChangeUserEmail":                 3,
	}
)

func (x VerificationCodeType) Enum() *VerificationCodeType {
	p := new(VerificationCodeType)
	*p = x
	return p
}

func (x VerificationCodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerificationCodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_main_proto_enumTypes[1].Descriptor()
}

func (VerificationCodeType) Type() protoreflect.EnumType {
	return &file_main_proto_enumTypes[1]
}

func (x VerificationCodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerificationCodeType.Descriptor instead.
func (VerificationCodeType) EnumDescriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{1}
}

type ItemStatusType int32

const (
	ItemStatusType_ItemStatusTypeUnspecified ItemStatusType = 0
	ItemStatusType_Available                 ItemStatusType = 1
	ItemStatusType_Unavailable               ItemStatusType = 2
	ItemStatusType_Deprecated                ItemStatusType = 3
)

// Enum value maps for ItemStatusType.
var (
	ItemStatusType_name = map[int32]string{
		0: "ItemStatusTypeUnspecified",
		1: "Available",
		2: "Unavailable",
		3: "Deprecated",
	}
	ItemStatusType_value = map[string]int32{
		"ItemStatusTypeUnspecified": 0,
		"Available":                 1,
		"Unavailable":               2,
		"Deprecated":                3,
	}
)

func (x ItemStatusType) Enum() *ItemStatusType {
	p := new(ItemStatusType)
	*p = x
	return p
}

func (x ItemStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_main_proto_enumTypes[2].Descriptor()
}

func (ItemStatusType) Type() protoreflect.EnumType {
	return &file_main_proto_enumTypes[2]
}

func (x ItemStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemStatusType.Descriptor instead.
func (ItemStatusType) EnumDescriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{2}
}

type BusinessStatusType int32

const (
	BusinessStatusType_BusinessStatusTypeUnspecified BusinessStatusType = 0
	BusinessStatusType_BusinessAvailable             BusinessStatusType = 1
	BusinessStatusType_BusinessUnavailable           BusinessStatusType = 2
)

// Enum value maps for BusinessStatusType.
var (
	BusinessStatusType_name = map[int32]string{
		0: "BusinessStatusTypeUnspecified",
		1: "BusinessAvailable",
		2: "BusinessUnavailable",
	}
	BusinessStatusType_value = map[string]int32{
		"BusinessStatusTypeUnspecified": 0,
		"BusinessAvailable":             1,
		"BusinessUnavailable":           2,
	}
)

func (x BusinessStatusType) Enum() *BusinessStatusType {
	p := new(BusinessStatusType)
	*p = x
	return p
}

func (x BusinessStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BusinessStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_main_proto_enumTypes[3].Descriptor()
}

func (BusinessStatusType) Type() protoreflect.EnumType {
	return &file_main_proto_enumTypes[3]
}

func (x BusinessStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BusinessStatusType.Descriptor instead.
func (BusinessStatusType) EnumDescriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{3}
}

type PlatformType int32

const (
	PlatformType_PlatformTypeUnspecified PlatformType = 0
	PlatformType_IOS                     PlatformType = 1
	PlatformType_Android                 PlatformType = 2
)

// Enum value maps for PlatformType.
var (
	PlatformType_name = map[int32]string{
		0: "PlatformTypeUnspecified",
		1: "IOS",
		2: "Android",
	}
	PlatformType_value = map[string]int32{
		"PlatformTypeUnspecified": 0,
		"IOS":                     1,
		"Android":                 2,
	}
)

func (x PlatformType) Enum() *PlatformType {
	p := new(PlatformType)
	*p = x
	return p
}

func (x PlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_main_proto_enumTypes[4].Descriptor()
}

func (PlatformType) Type() protoreflect.EnumType {
	return &file_main_proto_enumTypes[4]
}

func (x PlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlatformType.Descriptor instead.
func (PlatformType) EnumDescriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{4}
}

type AppType int32

const (
	AppType_AppTypeUnspecified AppType = 0
	AppType_App                AppType = 1
	AppType_BusinessApp        AppType = 2
)

// Enum value maps for AppType.
var (
	AppType_name = map[int32]string{
		0: "AppTypeUnspecified",
		1: "App",
		2: "BusinessApp",
	}
	AppType_value = map[string]int32{
		"AppTypeUnspecified": 0,
		"App":                1,
		"BusinessApp":        2,
	}
)

func (x AppType) Enum() *AppType {
	p := new(AppType)
	*p = x
	return p
}

func (x AppType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppType) Descriptor() protoreflect.EnumDescriptor {
	return file_main_proto_enumTypes[5].Descriptor()
}

func (AppType) Type() protoreflect.EnumType {
	return &file_main_proto_enumTypes[5]
}

func (x AppType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppType.Descriptor instead.
func (AppType) EnumDescriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{5}
}

type OrderStatusType int32

const (
	OrderStatusType_OrderStatusTypeUnspecified OrderStatusType = 0
	OrderStatusType_Pending                    OrderStatusType = 1
	OrderStatusType_Approved                   OrderStatusType = 2
	OrderStatusType_Rejected                   OrderStatusType = 3
	OrderStatusType_Received                   OrderStatusType = 4
)

// Enum value maps for OrderStatusType.
var (
	OrderStatusType_name = map[int32]string{
		0: "OrderStatusTypeUnspecified",
		1: "Pending",
		2: "Approved",
		3: "Rejected",
		4: "Received",
	}
	OrderStatusType_value = map[string]int32{
		"OrderStatusTypeUnspecified": 0,
		"Pending":                    1,
		"Approved":                   2,
		"Rejected":                   3,
		"Received":                   4,
	}
)

func (x OrderStatusType) Enum() *OrderStatusType {
	p := new(OrderStatusType)
	*p = x
	return p
}

func (x OrderStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_main_proto_enumTypes[6].Descriptor()
}

func (OrderStatusType) Type() protoreflect.EnumType {
	return &file_main_proto_enumTypes[6]
}

func (x OrderStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatusType.Descriptor instead.
func (OrderStatusType) EnumDescriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{6}
}

type DeliveryType int32

const (
	DeliveryType_DeliveryTypeUnspecified DeliveryType = 0
	DeliveryType_ToPickUp                DeliveryType = 1
	DeliveryType_HomeDelivery            DeliveryType = 2
)

// Enum value maps for DeliveryType.
var (
	DeliveryType_name = map[int32]string{
		0: "DeliveryTypeUnspecified",
		1: "ToPickUp",
		2: "HomeDelivery",
	}
	DeliveryType_value = map[string]int32{
		"DeliveryTypeUnspecified": 0,
		"ToPickUp":                1,
		"HomeDelivery":            2,
	}
)

func (x DeliveryType) Enum() *DeliveryType {
	p := new(DeliveryType)
	*p = x
	return p
}

func (x DeliveryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeliveryType) Descriptor() protoreflect.EnumDescriptor {
	return file_main_proto_enumTypes[7].Descriptor()
}

func (DeliveryType) Type() protoreflect.EnumType {
	return &file_main_proto_enumTypes[7]
}

func (x DeliveryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeliveryType.Descriptor instead.
func (DeliveryType) EnumDescriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{7}
}

type ResidenceType int32

const (
	ResidenceType_ResidenceTypeUnspecified ResidenceType = 0
	ResidenceType_House                    ResidenceType = 1
	ResidenceType_Apartment                ResidenceType = 2
)

// Enum value maps for ResidenceType.
var (
	ResidenceType_name = map[int32]string{
		0: "ResidenceTypeUnspecified",
		1: "House",
		2: "Apartment",
	}
	ResidenceType_value = map[string]int32{
		"ResidenceTypeUnspecified": 0,
		"House":                    1,
		"Apartment":                2,
	}
)

func (x ResidenceType) Enum() *ResidenceType {
	p := new(ResidenceType)
	*p = x
	return p
}

func (x ResidenceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResidenceType) Descriptor() protoreflect.EnumDescriptor {
	return file_main_proto_enumTypes[8].Descriptor()
}

func (ResidenceType) Type() protoreflect.EnumType {
	return &file_main_proto_enumTypes[8]
}

func (x ResidenceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResidenceType.Descriptor instead.
func (ResidenceType) EnumDescriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{8}
}

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_main_proto_enumTypes[9].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_main_proto_enumTypes[9]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{48, 0}
}

type UserAddress_UserAddressType int32

const (
	UserAddress_UNSPECIFIED UserAddress_UserAddressType = 0
	UserAddress_HOUSE       UserAddress_UserAddressType = 1
	UserAddress_APARTAMENT  UserAddress_UserAddressType = 2
)

// Enum value maps for UserAddress_UserAddressType.
var (
	UserAddress_UserAddressType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "HOUSE",
		2: "APARTAMENT",
	}
	UserAddress_UserAddressType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"HOUSE":       1,
		"APARTAMENT":  2,
	}
)

func (x UserAddress_UserAddressType) Enum() *UserAddress_UserAddressType {
	p := new(UserAddress_UserAddressType)
	*p = x
	return p
}

func (x UserAddress_UserAddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserAddress_UserAddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_main_proto_enumTypes[10].Descriptor()
}

func (UserAddress_UserAddressType) Type() protoreflect.EnumType {
	return &file_main_proto_enumTypes[10]
}

func (x UserAddress_UserAddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserAddress_UserAddressType.Descriptor instead.
func (UserAddress_UserAddressType) EnumDescriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{62, 0}
}

type GetOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{0}
}

func (x *GetOrderRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetOrderRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type GetOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GetOrderResponse) Reset() {
	*x = GetOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderResponse) ProtoMessage() {}

func (x *GetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderResponse.ProtoReflect.Descriptor instead.
func (*GetOrderResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{1}
}

func (x *GetOrderResponse) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

type ListOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage  string                 `protobuf:"bytes,1,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *ListOrderRequest) Reset() {
	*x = ListOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderRequest) ProtoMessage() {}

func (x *ListOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderRequest.ProtoReflect.Descriptor instead.
func (*ListOrderRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{2}
}

func (x *ListOrderRequest) GetNextPage() string {
	if x != nil {
		return x.NextPage
	}
	return ""
}

func (x *ListOrderRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type ListOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders   []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	NextPage string   `protobuf:"bytes,2,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
}

func (x *ListOrderResponse) Reset() {
	*x = ListOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderResponse) ProtoMessage() {}

func (x *ListOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderResponse.ProtoReflect.Descriptor instead.
func (*ListOrderResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{3}
}

func (x *ListOrderResponse) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *ListOrderResponse) GetNextPage() string {
	if x != nil {
		return x.NextPage
	}
	return ""
}

type GetCartItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *GetCartItemRequest) Reset() {
	*x = GetCartItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCartItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCartItemRequest) ProtoMessage() {}

func (x *GetCartItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCartItemRequest.ProtoReflect.Descriptor instead.
func (*GetCartItemRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{4}
}

func (x *GetCartItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCartItemRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type GetCartItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetCartItemResponse) Reset() {
	*x = GetCartItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCartItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCartItemResponse) ProtoMessage() {}

func (x *GetCartItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCartItemResponse.ProtoReflect.Descriptor instead.
func (*GetCartItemResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{5}
}

func (x *GetCartItemResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListCartItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage  string                 `protobuf:"bytes,1,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *ListCartItemRequest) Reset() {
	*x = ListCartItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCartItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCartItemRequest) ProtoMessage() {}

func (x *ListCartItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCartItemRequest.ProtoReflect.Descriptor instead.
func (*ListCartItemRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{6}
}

func (x *ListCartItemRequest) GetNextPage() string {
	if x != nil {
		return x.NextPage
	}
	return ""
}

func (x *ListCartItemRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type ListCartItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextPage string  `protobuf:"bytes,2,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
}

func (x *ListCartItemResponse) Reset() {
	*x = ListCartItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCartItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCartItemResponse) ProtoMessage() {}

func (x *ListCartItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCartItemResponse.ProtoReflect.Descriptor instead.
func (*ListCartItemResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{7}
}

func (x *ListCartItemResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListCartItemResponse) GetNextPage() string {
	if x != nil {
		return x.NextPage
	}
	return ""
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldMask                *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
	UpdateMask               *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=updateMask,proto3" json:"updateMask,omitempty"`
	Id                       string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Email                    string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Alias                    string                 `protobuf:"bytes,5,opt,name=alias,proto3" json:"alias,omitempty"`
	FullName                 string                 `protobuf:"bytes,6,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Thumbnail                string                 `protobuf:"bytes,7,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	ThumbnailBlurHash        string                 `protobuf:"bytes,8,opt,name=thumbnailBlurHash,proto3" json:"thumbnailBlurHash,omitempty"`
	HighQualityPhoto         string                 `protobuf:"bytes,9,opt,name=highQualityPhoto,proto3" json:"highQualityPhoto,omitempty"`
	HighQualityPhotoBlurHash string                 `protobuf:"bytes,10,opt,name=highQualityPhotoBlurHash,proto3" json:"highQualityPhotoBlurHash,omitempty"`
	LowQualityPhoto          string                 `protobuf:"bytes,11,opt,name=lowQualityPhoto,proto3" json:"lowQualityPhoto,omitempty"`
	LowQualityPhotoBlurHash  string                 `protobuf:"bytes,12,opt,name=lowQualityPhotoBlurHash,proto3" json:"lowQualityPhotoBlurHash,omitempty"`
	Code                     string                 `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUserRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *UpdateUserRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *UpdateUserRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UpdateUserRequest) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *UpdateUserRequest) GetThumbnailBlurHash() string {
	if x != nil {
		return x.ThumbnailBlurHash
	}
	return ""
}

func (x *UpdateUserRequest) GetHighQualityPhoto() string {
	if x != nil {
		return x.HighQualityPhoto
	}
	return ""
}

func (x *UpdateUserRequest) GetHighQualityPhotoBlurHash() string {
	if x != nil {
		return x.HighQualityPhotoBlurHash
	}
	return ""
}

func (x *UpdateUserRequest) GetLowQualityPhoto() string {
	if x != nil {
		return x.LowQualityPhoto
	}
	return ""
}

func (x *UpdateUserRequest) GetLowQualityPhotoBlurHash() string {
	if x != nil {
		return x.LowQualityPhotoBlurHash
	}
	return ""
}

func (x *UpdateUserRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ListSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *ListSessionRequest) Reset() {
	*x = ListSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionRequest) ProtoMessage() {}

func (x *ListSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionRequest.ProtoReflect.Descriptor instead.
func (*ListSessionRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{10}
}

func (x *ListSessionRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type ListSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
}

func (x *ListSessionResponse) Reset() {
	*x = ListSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionResponse) ProtoMessage() {}

func (x *ListSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionResponse.ProtoReflect.Descriptor instead.
func (*ListSessionResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{11}
}

func (x *ListSessionResponse) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type SignOutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	All                  bool   `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
	AuthorizationTokenFk string `protobuf:"bytes,2,opt,name=authorizationTokenFk,proto3" json:"authorizationTokenFk,omitempty"`
}

func (x *SignOutRequest) Reset() {
	*x = SignOutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutRequest) ProtoMessage() {}

func (x *SignOutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutRequest.ProtoReflect.Descriptor instead.
func (*SignOutRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{12}
}

func (x *SignOutRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *SignOutRequest) GetAuthorizationTokenFk() string {
	if x != nil {
		return x.AuthorizationTokenFk
	}
	return ""
}

type RefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string                 `protobuf:"bytes,1,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	FieldMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{13}
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshTokenRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type RefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken       string `protobuf:"bytes,1,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	AuthorizationToken string `protobuf:"bytes,2,opt,name=authorizationToken,proto3" json:"authorizationToken,omitempty"`
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{14}
}

func (x *RefreshTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshTokenResponse) GetAuthorizationToken() string {
	if x != nil {
		return x.AuthorizationToken
	}
	return ""
}

type SearchItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage               int32                  `protobuf:"varint,1,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
	Name                   string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProvinceFk             string                 `protobuf:"bytes,3,opt,name=provinceFk,proto3" json:"provinceFk,omitempty"`
	MunicipalityFk         string                 `protobuf:"bytes,4,opt,name=municipalityFk,proto3" json:"municipalityFk,omitempty"`
	SearchMunicipalityType SearchMunicipalityType `protobuf:"varint,5,opt,name=searchMunicipalityType,proto3,enum=SearchMunicipalityType" json:"searchMunicipalityType,omitempty"`
	Location               *Point                 `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	FieldMask              *fieldmaskpb.FieldMask `protobuf:"bytes,7,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *SearchItemRequest) Reset() {
	*x = SearchItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemRequest) ProtoMessage() {}

func (x *SearchItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemRequest.ProtoReflect.Descriptor instead.
func (*SearchItemRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{15}
}

func (x *SearchItemRequest) GetNextPage() int32 {
	if x != nil {
		return x.NextPage
	}
	return 0
}

func (x *SearchItemRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchItemRequest) GetProvinceFk() string {
	if x != nil {
		return x.ProvinceFk
	}
	return ""
}

func (x *SearchItemRequest) GetMunicipalityFk() string {
	if x != nil {
		return x.MunicipalityFk
	}
	return ""
}

func (x *SearchItemRequest) GetSearchMunicipalityType() SearchMunicipalityType {
	if x != nil {
		return x.SearchMunicipalityType
	}
	return SearchMunicipalityType_SearchMunicipalityTypeUnspecified
}

func (x *SearchItemRequest) GetLocation() *Point {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *SearchItemRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type SearchItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items                  []*SearchItem          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	SearchMunicipalityType SearchMunicipalityType `protobuf:"varint,2,opt,name=searchMunicipalityType,proto3,enum=SearchMunicipalityType" json:"searchMunicipalityType,omitempty"`
	NextPage               int32                  `protobuf:"varint,3,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
}

func (x *SearchItemResponse) Reset() {
	*x = SearchItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemResponse) ProtoMessage() {}

func (x *SearchItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemResponse.ProtoReflect.Descriptor instead.
func (*SearchItemResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{16}
}

func (x *SearchItemResponse) GetItems() []*SearchItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchItemResponse) GetSearchMunicipalityType() SearchMunicipalityType {
	if x != nil {
		return x.SearchMunicipalityType
	}
	return SearchMunicipalityType_SearchMunicipalityTypeUnspecified
}

func (x *SearchItemResponse) GetNextPage() int32 {
	if x != nil {
		return x.NextPage
	}
	return 0
}

type ListItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage   string                 `protobuf:"bytes,1,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
	BusinessFk string                 `protobuf:"bytes,2,opt,name=businessFk,proto3" json:"businessFk,omitempty"`
	FieldMask  *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *ListItemRequest) Reset() {
	*x = ListItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListItemRequest) ProtoMessage() {}

func (x *ListItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListItemRequest.ProtoReflect.Descriptor instead.
func (*ListItemRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{17}
}

func (x *ListItemRequest) GetNextPage() string {
	if x != nil {
		return x.NextPage
	}
	return ""
}

func (x *ListItemRequest) GetBusinessFk() string {
	if x != nil {
		return x.BusinessFk
	}
	return ""
}

func (x *ListItemRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type ListItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextPage string  `protobuf:"bytes,2,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
}

func (x *ListItemResponse) Reset() {
	*x = ListItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListItemResponse) ProtoMessage() {}

func (x *ListItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListItemResponse.ProtoReflect.Descriptor instead.
func (*ListItemResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{18}
}

func (x *ListItemResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListItemResponse) GetNextPage() string {
	if x != nil {
		return x.NextPage
	}
	return ""
}

type GetItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location  *Point                 `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *GetItemRequest) Reset() {
	*x = GetItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemRequest) ProtoMessage() {}

func (x *GetItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemRequest.ProtoReflect.Descriptor instead.
func (*GetItemRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{19}
}

func (x *GetItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetItemRequest) GetLocation() *Point {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *GetItemRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type GetItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetItemResponse) Reset() {
	*x = GetItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemResponse) ProtoMessage() {}

func (x *GetItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemResponse.ProtoReflect.Descriptor instead.
func (*GetItemResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{20}
}

func (x *GetItemResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type FeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location               *Point                 `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	ProvinceFk             string                 `protobuf:"bytes,2,opt,name=provinceFk,proto3" json:"provinceFk,omitempty"`
	MunicipalityFk         string                 `protobuf:"bytes,3,opt,name=municipalityFk,proto3" json:"municipalityFk,omitempty"`
	SearchMunicipalityType SearchMunicipalityType `protobuf:"varint,4,opt,name=searchMunicipalityType,proto3,enum=SearchMunicipalityType" json:"searchMunicipalityType,omitempty"`
	NextPage               int32                  `protobuf:"varint,5,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
	FieldMask              *fieldmaskpb.FieldMask `protobuf:"bytes,6,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *FeedRequest) Reset() {
	*x = FeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedRequest) ProtoMessage() {}

func (x *FeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedRequest.ProtoReflect.Descriptor instead.
func (*FeedRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{21}
}

func (x *FeedRequest) GetLocation() *Point {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *FeedRequest) GetProvinceFk() string {
	if x != nil {
		return x.ProvinceFk
	}
	return ""
}

func (x *FeedRequest) GetMunicipalityFk() string {
	if x != nil {
		return x.MunicipalityFk
	}
	return ""
}

func (x *FeedRequest) GetSearchMunicipalityType() SearchMunicipalityType {
	if x != nil {
		return x.SearchMunicipalityType
	}
	return SearchMunicipalityType_SearchMunicipalityTypeUnspecified
}

func (x *FeedRequest) GetNextPage() int32 {
	if x != nil {
		return x.NextPage
	}
	return 0
}

func (x *FeedRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type FeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Businesses             []*Business            `protobuf:"bytes,1,rep,name=businesses,proto3" json:"businesses,omitempty"`
	IsCache                bool                   `protobuf:"varint,2,opt,name=isCache,proto3" json:"isCache,omitempty"`
	SearchMunicipalityType SearchMunicipalityType `protobuf:"varint,3,opt,name=searchMunicipalityType,proto3,enum=SearchMunicipalityType" json:"searchMunicipalityType,omitempty"`
	NextPage               int32                  `protobuf:"varint,4,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
}

func (x *FeedResponse) Reset() {
	*x = FeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedResponse) ProtoMessage() {}

func (x *FeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedResponse.ProtoReflect.Descriptor instead.
func (*FeedResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{22}
}

func (x *FeedResponse) GetBusinesses() []*Business {
	if x != nil {
		return x.Businesses
	}
	return nil
}

func (x *FeedResponse) GetIsCache() bool {
	if x != nil {
		return x.IsCache
	}
	return false
}

func (x *FeedResponse) GetSearchMunicipalityType() SearchMunicipalityType {
	if x != nil {
		return x.SearchMunicipalityType
	}
	return SearchMunicipalityType_SearchMunicipalityTypeUnspecified
}

func (x *FeedResponse) GetNextPage() int32 {
	if x != nil {
		return x.NextPage
	}
	return 0
}

type GetBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *GetBusinessRequest) Reset() {
	*x = GetBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessRequest) ProtoMessage() {}

func (x *GetBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{23}
}

func (x *GetBusinessRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetBusinessRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type GetBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Business *Business `protobuf:"bytes,1,opt,name=business,proto3" json:"business,omitempty"`
}

func (x *GetBusinessResponse) Reset() {
	*x = GetBusinessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessResponse) ProtoMessage() {}

func (x *GetBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{24}
}

func (x *GetBusinessResponse) GetBusiness() *Business {
	if x != nil {
		return x.Business
	}
	return nil
}

type GetPresignedPutUserAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectName string `protobuf:"bytes,1,opt,name=objectName,proto3" json:"objectName,omitempty"`
}

func (x *GetPresignedPutUserAvatarRequest) Reset() {
	*x = GetPresignedPutUserAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPresignedPutUserAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPresignedPutUserAvatarRequest) ProtoMessage() {}

func (x *GetPresignedPutUserAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPresignedPutUserAvatarRequest.ProtoReflect.Descriptor instead.
func (*GetPresignedPutUserAvatarRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{25}
}

func (x *GetPresignedPutUserAvatarRequest) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

type GetPresignedPutUserAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectUrl string `protobuf:"bytes,1,opt,name=objectUrl,proto3" json:"objectUrl,omitempty"`
}

func (x *GetPresignedPutUserAvatarResponse) Reset() {
	*x = GetPresignedPutUserAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPresignedPutUserAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPresignedPutUserAvatarResponse) ProtoMessage() {}

func (x *GetPresignedPutUserAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPresignedPutUserAvatarResponse.ProtoReflect.Descriptor instead.
func (*GetPresignedPutUserAvatarResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{26}
}

func (x *GetPresignedPutUserAvatarResponse) GetObjectUrl() string {
	if x != nil {
		return x.ObjectUrl
	}
	return ""
}

type SignUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Alias    string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	FullName string `protobuf:"bytes,3,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Birthday string `protobuf:"bytes,4,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Photo    string `protobuf:"bytes,5,opt,name=photo,proto3" json:"photo,omitempty"`
	Code     string `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SignUpRequest) Reset() {
	*x = SignUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpRequest) ProtoMessage() {}

func (x *SignUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpRequest.ProtoReflect.Descriptor instead.
func (*SignUpRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{27}
}

func (x *SignUpRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SignUpRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *SignUpRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *SignUpRequest) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *SignUpRequest) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *SignUpRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SignUpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken       string `protobuf:"bytes,1,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	AuthorizationToken string `protobuf:"bytes,2,opt,name=authorizationToken,proto3" json:"authorizationToken,omitempty"`
	User               *User  `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *SignUpResponse) Reset() {
	*x = SignUpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpResponse) ProtoMessage() {}

func (x *SignUpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpResponse.ProtoReflect.Descriptor instead.
func (*SignUpResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{28}
}

func (x *SignUpResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *SignUpResponse) GetAuthorizationToken() string {
	if x != nil {
		return x.AuthorizationToken
	}
	return ""
}

func (x *SignUpResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserExistsStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *UserExistsStreamRequest) Reset() {
	*x = UserExistsStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserExistsStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExistsStreamRequest) ProtoMessage() {}

func (x *UserExistsStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExistsStreamRequest.ProtoReflect.Descriptor instead.
func (*UserExistsStreamRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{29}
}

func (x *UserExistsStreamRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type UserExistsStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid bool `protobuf:"varint,1,opt,name=isValid,proto3" json:"isValid,omitempty"`
}

func (x *UserExistsStreamResponse) Reset() {
	*x = UserExistsStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserExistsStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExistsStreamResponse) ProtoMessage() {}

func (x *UserExistsStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExistsStreamResponse.ProtoReflect.Descriptor instead.
func (*UserExistsStreamResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{30}
}

func (x *UserExistsStreamResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type UserExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserExistsRequest) Reset() {
	*x = UserExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExistsRequest) ProtoMessage() {}

func (x *UserExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExistsRequest.ProtoReflect.Descriptor instead.
func (*UserExistsRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{31}
}

func (x *UserExistsRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CheckSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddresses []string `protobuf:"bytes,1,rep,name=ipAddresses,proto3" json:"ipAddresses,omitempty"`
}

func (x *CheckSessionResponse) Reset() {
	*x = CheckSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSessionResponse) ProtoMessage() {}

func (x *CheckSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSessionResponse.ProtoReflect.Descriptor instead.
func (*CheckSessionResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{32}
}

func (x *CheckSessionResponse) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

type CheckSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken       string `protobuf:"bytes,1,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	AuthorizationToken string `protobuf:"bytes,2,opt,name=authorizationToken,proto3" json:"authorizationToken,omitempty"`
}

func (x *CheckSessionRequest) Reset() {
	*x = CheckSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSessionRequest) ProtoMessage() {}

func (x *CheckSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSessionRequest.ProtoReflect.Descriptor instead.
func (*CheckSessionRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{33}
}

func (x *CheckSessionRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *CheckSessionRequest) GetAuthorizationToken() string {
	if x != nil {
		return x.AuthorizationToken
	}
	return ""
}

type CreateVerificationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Type      VerificationCodeType   `protobuf:"varint,2,opt,name=type,proto3,enum=VerificationCodeType" json:"type,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *CreateVerificationCodeRequest) Reset() {
	*x = CreateVerificationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVerificationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVerificationCodeRequest) ProtoMessage() {}

func (x *CreateVerificationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVerificationCodeRequest.ProtoReflect.Descriptor instead.
func (*CreateVerificationCodeRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{34}
}

func (x *CreateVerificationCodeRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateVerificationCodeRequest) GetType() VerificationCodeType {
	if x != nil {
		return x.Type
	}
	return VerificationCodeType_VerificationCodeTypeUnspecified
}

func (x *CreateVerificationCodeRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type CreateVerificationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationCode *VerificationCode `protobuf:"bytes,1,opt,name=verificationCode,proto3" json:"verificationCode,omitempty"`
}

func (x *CreateVerificationCodeResponse) Reset() {
	*x = CreateVerificationCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVerificationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVerificationCodeResponse) ProtoMessage() {}

func (x *CreateVerificationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVerificationCodeResponse.ProtoReflect.Descriptor instead.
func (*CreateVerificationCodeResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{35}
}

func (x *CreateVerificationCodeResponse) GetVerificationCode() *VerificationCode {
	if x != nil {
		return x.VerificationCode
	}
	return nil
}

type ListVerificationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *ListVerificationCodeRequest) Reset() {
	*x = ListVerificationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVerificationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVerificationCodeRequest) ProtoMessage() {}

func (x *ListVerificationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVerificationCodeRequest.ProtoReflect.Descriptor instead.
func (*ListVerificationCodeRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{36}
}

func (x *ListVerificationCodeRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type ListVerificationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationCodes []*VerificationCode `protobuf:"bytes,1,rep,name=verificationCodes,proto3" json:"verificationCodes,omitempty"`
}

func (x *ListVerificationCodeResponse) Reset() {
	*x = ListVerificationCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVerificationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVerificationCodeResponse) ProtoMessage() {}

func (x *ListVerificationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVerificationCodeResponse.ProtoReflect.Descriptor instead.
func (*ListVerificationCodeResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{37}
}

func (x *ListVerificationCodeResponse) GetVerificationCodes() []*VerificationCode {
	if x != nil {
		return x.VerificationCodes
	}
	return nil
}

type DeleteVerificationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteVerificationCodeRequest) Reset() {
	*x = DeleteVerificationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVerificationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVerificationCodeRequest) ProtoMessage() {}

func (x *DeleteVerificationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVerificationCodeRequest.ProtoReflect.Descriptor instead.
func (*DeleteVerificationCodeRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteVerificationCodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVerificationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code      string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,5,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *GetVerificationCodeRequest) Reset() {
	*x = GetVerificationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerificationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationCodeRequest) ProtoMessage() {}

func (x *GetVerificationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationCodeRequest.ProtoReflect.Descriptor instead.
func (*GetVerificationCodeRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{39}
}

func (x *GetVerificationCodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetVerificationCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetVerificationCodeRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type GetVerificationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationCode *VerificationCode `protobuf:"bytes,1,opt,name=verificationCode,proto3" json:"verificationCode,omitempty"`
}

func (x *GetVerificationCodeResponse) Reset() {
	*x = GetVerificationCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerificationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationCodeResponse) ProtoMessage() {}

func (x *GetVerificationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationCodeResponse.ProtoReflect.Descriptor instead.
func (*GetVerificationCodeResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{40}
}

func (x *GetVerificationCodeResponse) GetVerificationCode() *VerificationCode {
	if x != nil {
		return x.VerificationCode
	}
	return nil
}

type UpdateVerificationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code      string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Email     string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Type      VerificationCodeType   `protobuf:"varint,4,opt,name=type,proto3,enum=VerificationCodeType" json:"type,omitempty"`
	DeviceId  string                 `protobuf:"bytes,5,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,6,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *UpdateVerificationCodeRequest) Reset() {
	*x = UpdateVerificationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVerificationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVerificationCodeRequest) ProtoMessage() {}

func (x *UpdateVerificationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVerificationCodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateVerificationCodeRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateVerificationCodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVerificationCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateVerificationCodeRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateVerificationCodeRequest) GetType() VerificationCodeType {
	if x != nil {
		return x.Type
	}
	return VerificationCodeType_VerificationCodeTypeUnspecified
}

func (x *UpdateVerificationCodeRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UpdateVerificationCodeRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type UpdateVerificationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationCode *VerificationCode `protobuf:"bytes,1,opt,name=verificationCode,proto3" json:"verificationCode,omitempty"`
}

func (x *UpdateVerificationCodeResponse) Reset() {
	*x = UpdateVerificationCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVerificationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVerificationCodeResponse) ProtoMessage() {}

func (x *UpdateVerificationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVerificationCodeResponse.ProtoReflect.Descriptor instead.
func (*UpdateVerificationCodeResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateVerificationCodeResponse) GetVerificationCode() *VerificationCode {
	if x != nil {
		return x.VerificationCode
	}
	return nil
}

type SignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Code      string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (x *SignInRequest) Reset() {
	*x = SignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInRequest) ProtoMessage() {}

func (x *SignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInRequest.ProtoReflect.Descriptor instead.
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{43}
}

func (x *SignInRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SignInRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SignInRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type SignInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken       string `protobuf:"bytes,1,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	AuthorizationToken string `protobuf:"bytes,2,opt,name=authorizationToken,proto3" json:"authorizationToken,omitempty"`
	User               *User  `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"` // Business business = 4;
}

func (x *SignInResponse) Reset() {
	*x = SignInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInResponse) ProtoMessage() {}

func (x *SignInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInResponse.ProtoReflect.Descriptor instead.
func (*SignInResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{44}
}

func (x *SignInResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *SignInResponse) GetAuthorizationToken() string {
	if x != nil {
		return x.AuthorizationToken
	}
	return ""
}

func (x *SignInResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type HostnameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostnameRequest) Reset() {
	*x = HostnameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostnameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostnameRequest) ProtoMessage() {}

func (x *HostnameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostnameRequest.ProtoReflect.Descriptor instead.
func (*HostnameRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{45}
}

type HostnameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *HostnameResponse) Reset() {
	*x = HostnameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostnameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostnameResponse) ProtoMessage() {}

func (x *HostnameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostnameResponse.ProtoReflect.Descriptor instead.
func (*HostnameResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{46}
}

func (x *HostnameResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{47}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=HealthCheckResponse_ServingStatus" json:"status,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{48}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status         OrderStatusType `protobuf:"varint,2,opt,name=status,proto3,enum=OrderStatusType" json:"status,omitempty"`
	DeliveryDate   string          `protobuf:"bytes,3,opt,name=deliveryDate,proto3" json:"deliveryDate,omitempty"`
	DeliveryType   DeliveryType    `protobuf:"varint,4,opt,name=deliveryType,proto3,enum=DeliveryType" json:"deliveryType,omitempty"`
	ResidenceType  ResidenceType   `protobuf:"varint,5,opt,name=residenceType,proto3,enum=ResidenceType" json:"residenceType,omitempty"`
	BuildingNumber string          `protobuf:"bytes,6,opt,name=buildingNumber,proto3" json:"buildingNumber,omitempty"`
	HouseNumber    string          `protobuf:"bytes,7,opt,name=houseNumber,proto3" json:"houseNumber,omitempty"`
	Coordinates    *Point          `protobuf:"bytes,8,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	Price          float64         `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`
	BusinessFk     string          `protobuf:"bytes,10,opt,name=businessFk,proto3" json:"businessFk,omitempty"`
	UserFk         string          `protobuf:"bytes,11,opt,name=userFk,proto3" json:"userFk,omitempty"`
	DeviceFk       string          `protobuf:"bytes,12,opt,name=deviceFk,proto3" json:"deviceFk,omitempty"`
	AppVersion     string          `protobuf:"bytes,13,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	CreateTime     string          `protobuf:"bytes,14,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime     string          `protobuf:"bytes,15,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{49}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetStatus() OrderStatusType {
	if x != nil {
		return x.Status
	}
	return OrderStatusType_OrderStatusTypeUnspecified
}

func (x *Order) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *Order) GetDeliveryType() DeliveryType {
	if x != nil {
		return x.DeliveryType
	}
	return DeliveryType_DeliveryTypeUnspecified
}

func (x *Order) GetResidenceType() ResidenceType {
	if x != nil {
		return x.ResidenceType
	}
	return ResidenceType_ResidenceTypeUnspecified
}

func (x *Order) GetBuildingNumber() string {
	if x != nil {
		return x.BuildingNumber
	}
	return ""
}

func (x *Order) GetHouseNumber() string {
	if x != nil {
		return x.HouseNumber
	}
	return ""
}

func (x *Order) GetCoordinates() *Point {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *Order) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Order) GetBusinessFk() string {
	if x != nil {
		return x.BusinessFk
	}
	return ""
}

func (x *Order) GetUserFk() string {
	if x != nil {
		return x.UserFk
	}
	return ""
}

func (x *Order) GetDeviceFk() string {
	if x != nil {
		return x.DeviceFk
	}
	return ""
}

func (x *Order) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *Order) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Order) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type CartItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemFk               string  `protobuf:"bytes,2,opt,name=itemFk,proto3" json:"itemFk,omitempty"`
	Price                float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	UserFk               string  `protobuf:"bytes,4,opt,name=userFk,proto3" json:"userFk,omitempty"`
	AuthorizationTokenFk string  `protobuf:"bytes,5,opt,name=authorizationTokenFk,proto3" json:"authorizationTokenFk,omitempty"`
	CreateTim            string  `protobuf:"bytes,6,opt,name=createTim,proto3" json:"createTim,omitempty"`
	UpdateTime           string  `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *CartItem) Reset() {
	*x = CartItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartItem) ProtoMessage() {}

func (x *CartItem) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartItem.ProtoReflect.Descriptor instead.
func (*CartItem) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{50}
}

func (x *CartItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CartItem) GetItemFk() string {
	if x != nil {
		return x.ItemFk
	}
	return ""
}

func (x *CartItem) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CartItem) GetUserFk() string {
	if x != nil {
		return x.UserFk
	}
	return ""
}

func (x *CartItem) GetAuthorizationTokenFk() string {
	if x != nil {
		return x.AuthorizationTokenFk
	}
	return ""
}

func (x *CartItem) GetCreateTim() string {
	if x != nil {
		return x.CreateTim
	}
	return ""
}

func (x *CartItem) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName                 string            `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Alias                    string            `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	HighQualityPhoto         string            `protobuf:"bytes,4,opt,name=highQualityPhoto,proto3" json:"highQualityPhoto,omitempty"`
	HighQualityPhotoBlurHash string            `protobuf:"bytes,5,opt,name=highQualityPhotoBlurHash,proto3" json:"highQualityPhotoBlurHash,omitempty"`
	LowQualityPhoto          string            `protobuf:"bytes,6,opt,name=lowQualityPhoto,proto3" json:"lowQualityPhoto,omitempty"`
	LowQualityPhotoBlurHash  string            `protobuf:"bytes,7,opt,name=lowQualityPhotoBlurHash,proto3" json:"lowQualityPhotoBlurHash,omitempty"`
	Thumbnail                string            `protobuf:"bytes,8,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	ThumbnailBlurHash        string            `protobuf:"bytes,9,opt,name=thumbnailBlurHash,proto3" json:"thumbnailBlurHash,omitempty"`
	UserAddress              []*UserAddress    `protobuf:"bytes,10,rep,name=userAddress,proto3" json:"userAddress,omitempty"`
	IsLegalAge               bool              `protobuf:"varint,11,opt,name=isLegalAge,proto3" json:"isLegalAge,omitempty"`
	Email                    string            `protobuf:"bytes,12,opt,name=email,proto3" json:"email,omitempty"`
	Permissions              []*UserPermission `protobuf:"bytes,13,rep,name=permissions,proto3" json:"permissions,omitempty"`
	CreateTime               string            `protobuf:"bytes,14,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime               string            `protobuf:"bytes,15,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{51}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *User) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *User) GetHighQualityPhoto() string {
	if x != nil {
		return x.HighQualityPhoto
	}
	return ""
}

func (x *User) GetHighQualityPhotoBlurHash() string {
	if x != nil {
		return x.HighQualityPhotoBlurHash
	}
	return ""
}

func (x *User) GetLowQualityPhoto() string {
	if x != nil {
		return x.LowQualityPhoto
	}
	return ""
}

func (x *User) GetLowQualityPhotoBlurHash() string {
	if x != nil {
		return x.LowQualityPhotoBlurHash
	}
	return ""
}

func (x *User) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *User) GetThumbnailBlurHash() string {
	if x != nil {
		return x.ThumbnailBlurHash
	}
	return ""
}

func (x *User) GetUserAddress() []*UserAddress {
	if x != nil {
		return x.UserAddress
	}
	return nil
}

func (x *User) GetIsLegalAge() bool {
	if x != nil {
		return x.IsLegalAge
	}
	return false
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPermissions() []*UserPermission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *User) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *User) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type Business struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                     string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description              string             `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Address                  string             `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Phone                    string             `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                    string             `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	HighQualityPhoto         string             `protobuf:"bytes,7,opt,name=highQualityPhoto,proto3" json:"highQualityPhoto,omitempty"`
	HighQualityPhotoBlurHash string             `protobuf:"bytes,8,opt,name=highQualityPhotoBlurHash,proto3" json:"highQualityPhotoBlurHash,omitempty"`
	LowQualityPhoto          string             `protobuf:"bytes,9,opt,name=lowQualityPhoto,proto3" json:"lowQualityPhoto,omitempty"`
	LowQualityPhotoBlurHash  string             `protobuf:"bytes,10,opt,name=lowQualityPhotoBlurHash,proto3" json:"lowQualityPhotoBlurHash,omitempty"`
	Thumbnail                string             `protobuf:"bytes,11,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	ThumbnailBlurHash        string             `protobuf:"bytes,12,opt,name=thumbnailBlurHash,proto3" json:"thumbnailBlurHash,omitempty"`
	IsOpen                   bool               `protobuf:"varint,13,opt,name=isOpen,proto3" json:"isOpen,omitempty"`
	DeliveryPrice            float64            `protobuf:"fixed64,14,opt,name=deliveryPrice,proto3" json:"deliveryPrice,omitempty"`
	Polygon                  []*Polygon         `protobuf:"bytes,15,rep,name=polygon,proto3" json:"polygon,omitempty"`
	Coordinates              *Point             `protobuf:"bytes,16,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	LeadDayTime              int32              `protobuf:"varint,17,opt,name=leadDayTime,proto3" json:"leadDayTime,omitempty"`
	LeadHoursTime            int32              `protobuf:"varint,18,opt,name=leadHoursTime,proto3" json:"leadHoursTime,omitempty"`
	LeadMinutesTime          int32              `protobuf:"varint,19,opt,name=leadMinutesTime,proto3" json:"leadMinutesTime,omitempty"`
	ToPickUp                 bool               `protobuf:"varint,20,opt,name=toPickUp,proto3" json:"toPickUp,omitempty"`
	HomeDelivery             bool               `protobuf:"varint,21,opt,name=homeDelivery,proto3" json:"homeDelivery,omitempty"`
	BusinessBrandFk          string             `protobuf:"bytes,22,opt,name=businessBrandFk,proto3" json:"businessBrandFk,omitempty"`
	ProvinceFk               string             `protobuf:"bytes,23,opt,name=provinceFk,proto3" json:"provinceFk,omitempty"`
	MunicipalityFk           string             `protobuf:"bytes,24,opt,name=municipalityFk,proto3" json:"municipalityFk,omitempty"`
	Distance                 float64            `protobuf:"fixed64,25,opt,name=distance,proto3" json:"distance,omitempty"`
	Status                   BusinessStatusType `protobuf:"varint,26,opt,name=status,proto3,enum=BusinessStatusType" json:"status,omitempty"`
	Cursor                   int32              `protobuf:"varint,27,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *Business) Reset() {
	*x = Business{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Business) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Business) ProtoMessage() {}

func (x *Business) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Business.ProtoReflect.Descriptor instead.
func (*Business) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{52}
}

func (x *Business) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Business) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Business) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Business) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Business) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Business) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Business) GetHighQualityPhoto() string {
	if x != nil {
		return x.HighQualityPhoto
	}
	return ""
}

func (x *Business) GetHighQualityPhotoBlurHash() string {
	if x != nil {
		return x.HighQualityPhotoBlurHash
	}
	return ""
}

func (x *Business) GetLowQualityPhoto() string {
	if x != nil {
		return x.LowQualityPhoto
	}
	return ""
}

func (x *Business) GetLowQualityPhotoBlurHash() string {
	if x != nil {
		return x.LowQualityPhotoBlurHash
	}
	return ""
}

func (x *Business) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *Business) GetThumbnailBlurHash() string {
	if x != nil {
		return x.ThumbnailBlurHash
	}
	return ""
}

func (x *Business) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *Business) GetDeliveryPrice() float64 {
	if x != nil {
		return x.DeliveryPrice
	}
	return 0
}

func (x *Business) GetPolygon() []*Polygon {
	if x != nil {
		return x.Polygon
	}
	return nil
}

func (x *Business) GetCoordinates() *Point {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *Business) GetLeadDayTime() int32 {
	if x != nil {
		return x.LeadDayTime
	}
	return 0
}

func (x *Business) GetLeadHoursTime() int32 {
	if x != nil {
		return x.LeadHoursTime
	}
	return 0
}

func (x *Business) GetLeadMinutesTime() int32 {
	if x != nil {
		return x.LeadMinutesTime
	}
	return 0
}

func (x *Business) GetToPickUp() bool {
	if x != nil {
		return x.ToPickUp
	}
	return false
}

func (x *Business) GetHomeDelivery() bool {
	if x != nil {
		return x.HomeDelivery
	}
	return false
}

func (x *Business) GetBusinessBrandFk() string {
	if x != nil {
		return x.BusinessBrandFk
	}
	return ""
}

func (x *Business) GetProvinceFk() string {
	if x != nil {
		return x.ProvinceFk
	}
	return ""
}

func (x *Business) GetMunicipalityFk() string {
	if x != nil {
		return x.MunicipalityFk
	}
	return ""
}

func (x *Business) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *Business) GetStatus() BusinessStatusType {
	if x != nil {
		return x.Status
	}
	return BusinessStatusType_BusinessStatusTypeUnspecified
}

func (x *Business) GetCursor() int32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                     string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description              string         `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price                    float64        `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Status                   ItemStatusType `protobuf:"varint,5,opt,name=status,proto3,enum=ItemStatusType" json:"status,omitempty"`
	Availability             int32          `protobuf:"varint,6,opt,name=availability,proto3" json:"availability,omitempty"`
	BusinessFk               string         `protobuf:"bytes,7,opt,name=businessFk,proto3" json:"businessFk,omitempty"`
	BusinessItemCategoryFk   string         `protobuf:"bytes,8,opt,name=businessItemCategoryFk,proto3" json:"businessItemCategoryFk,omitempty"`
	HighQualityPhoto         string         `protobuf:"bytes,9,opt,name=highQualityPhoto,proto3" json:"highQualityPhoto,omitempty"`
	HighQualityPhotoBlurHash string         `protobuf:"bytes,10,opt,name=highQualityPhotoBlurHash,proto3" json:"highQualityPhotoBlurHash,omitempty"`
	LowQualityPhoto          string         `protobuf:"bytes,11,opt,name=lowQualityPhoto,proto3" json:"lowQualityPhoto,omitempty"`
	LowQualityPhotoBlurHash  string         `protobuf:"bytes,12,opt,name=lowQualityPhotoBlurHash,proto3" json:"lowQualityPhotoBlurHash,omitempty"`
	Thumbnail                string         `protobuf:"bytes,13,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	ThumbnailBlurHash        string         `protobuf:"bytes,14,opt,name=thumbnailBlurHash,proto3" json:"thumbnailBlurHash,omitempty"`
	Photos                   []*ItemPhoto   `protobuf:"bytes,15,rep,name=photos,proto3" json:"photos,omitempty"`
	CreateTime               string         `protobuf:"bytes,16,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime               string         `protobuf:"bytes,17,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Cursor                   int32          `protobuf:"varint,18,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{53}
}

func (x *Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Item) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Item) GetStatus() ItemStatusType {
	if x != nil {
		return x.Status
	}
	return ItemStatusType_ItemStatusTypeUnspecified
}

func (x *Item) GetAvailability() int32 {
	if x != nil {
		return x.Availability
	}
	return 0
}

func (x *Item) GetBusinessFk() string {
	if x != nil {
		return x.BusinessFk
	}
	return ""
}

func (x *Item) GetBusinessItemCategoryFk() string {
	if x != nil {
		return x.BusinessItemCategoryFk
	}
	return ""
}

func (x *Item) GetHighQualityPhoto() string {
	if x != nil {
		return x.HighQualityPhoto
	}
	return ""
}

func (x *Item) GetHighQualityPhotoBlurHash() string {
	if x != nil {
		return x.HighQualityPhotoBlurHash
	}
	return ""
}

func (x *Item) GetLowQualityPhoto() string {
	if x != nil {
		return x.LowQualityPhoto
	}
	return ""
}

func (x *Item) GetLowQualityPhotoBlurHash() string {
	if x != nil {
		return x.LowQualityPhotoBlurHash
	}
	return ""
}

func (x *Item) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *Item) GetThumbnailBlurHash() string {
	if x != nil {
		return x.ThumbnailBlurHash
	}
	return ""
}

func (x *Item) GetPhotos() []*ItemPhoto {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *Item) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Item) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *Item) GetCursor() int32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

type SearchItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price             float64        `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Status            ItemStatusType `protobuf:"varint,4,opt,name=status,proto3,enum=ItemStatusType" json:"status,omitempty"`
	Thumbnail         string         `protobuf:"bytes,5,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	ThumbnailBlurHash string         `protobuf:"bytes,6,opt,name=thumbnailBlurHash,proto3" json:"thumbnailBlurHash,omitempty"`
	BusinessName      string         `protobuf:"bytes,7,opt,name=businessName,proto3" json:"businessName,omitempty"`
	Cursor            int32          `protobuf:"varint,8,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *SearchItem) Reset() {
	*x = SearchItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItem) ProtoMessage() {}

func (x *SearchItem) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItem.ProtoReflect.Descriptor instead.
func (*SearchItem) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{54}
}

func (x *SearchItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchItem) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SearchItem) GetStatus() ItemStatusType {
	if x != nil {
		return x.Status
	}
	return ItemStatusType_ItemStatusTypeUnspecified
}

func (x *SearchItem) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *SearchItem) GetThumbnailBlurHash() string {
	if x != nil {
		return x.ThumbnailBlurHash
	}
	return ""
}

func (x *SearchItem) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *SearchItem) GetCursor() int32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

type ItemPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemFk                   string `protobuf:"bytes,2,opt,name=itemFk,proto3" json:"itemFk,omitempty"`
	HighQualityPhoto         string `protobuf:"bytes,3,opt,name=highQualityPhoto,proto3" json:"highQualityPhoto,omitempty"`
	HighQualityPhotoBlurHash string `protobuf:"bytes,4,opt,name=highQualityPhotoBlurHash,proto3" json:"highQualityPhotoBlurHash,omitempty"`
	LowQualityPhoto          string `protobuf:"bytes,5,opt,name=lowQualityPhoto,proto3" json:"lowQualityPhoto,omitempty"`
	LowQualityPhotoBlurHash  string `protobuf:"bytes,6,opt,name=lowQualityPhotoBlurHash,proto3" json:"lowQualityPhotoBlurHash,omitempty"`
	Thumbnail                string `protobuf:"bytes,7,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	ThumbnailBlurHash        string `protobuf:"bytes,8,opt,name=thumbnailBlurHash,proto3" json:"thumbnailBlurHash,omitempty"`
	CreateTime               string `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime               string `protobuf:"bytes,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *ItemPhoto) Reset() {
	*x = ItemPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemPhoto) ProtoMessage() {}

func (x *ItemPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemPhoto.ProtoReflect.Descriptor instead.
func (*ItemPhoto) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{55}
}

func (x *ItemPhoto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ItemPhoto) GetItemFk() string {
	if x != nil {
		return x.ItemFk
	}
	return ""
}

func (x *ItemPhoto) GetHighQualityPhoto() string {
	if x != nil {
		return x.HighQualityPhoto
	}
	return ""
}

func (x *ItemPhoto) GetHighQualityPhotoBlurHash() string {
	if x != nil {
		return x.HighQualityPhotoBlurHash
	}
	return ""
}

func (x *ItemPhoto) GetLowQualityPhoto() string {
	if x != nil {
		return x.LowQualityPhoto
	}
	return ""
}

func (x *ItemPhoto) GetLowQualityPhotoBlurHash() string {
	if x != nil {
		return x.LowQualityPhotoBlurHash
	}
	return ""
}

func (x *ItemPhoto) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *ItemPhoto) GetThumbnailBlurHash() string {
	if x != nil {
		return x.ThumbnailBlurHash
	}
	return ""
}

func (x *ItemPhoto) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ItemPhoto) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type BannedUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description                   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	UserFk                        string `protobuf:"bytes,3,opt,name=userFk,proto3" json:"userFk,omitempty"`
	Email                         string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	ModeratorAuthorizationTokenFk string `protobuf:"bytes,5,opt,name=moderatorAuthorizationTokenFk,proto3" json:"moderatorAuthorizationTokenFk,omitempty"`
	CreateTime                    string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime                    string `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *BannedUser) Reset() {
	*x = BannedUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannedUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannedUser) ProtoMessage() {}

func (x *BannedUser) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannedUser.ProtoReflect.Descriptor instead.
func (*BannedUser) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{56}
}

func (x *BannedUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BannedUser) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BannedUser) GetUserFk() string {
	if x != nil {
		return x.UserFk
	}
	return ""
}

func (x *BannedUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BannedUser) GetModeratorAuthorizationTokenFk() string {
	if x != nil {
		return x.ModeratorAuthorizationTokenFk
	}
	return ""
}

func (x *BannedUser) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *BannedUser) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type BannedDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description                   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	DeviceFk                      string `protobuf:"bytes,3,opt,name=deviceFk,proto3" json:"deviceFk,omitempty"`
	DeviceId                      string `protobuf:"bytes,4,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	ModeratorAuthorizationTokenFk string `protobuf:"bytes,5,opt,name=moderatorAuthorizationTokenFk,proto3" json:"moderatorAuthorizationTokenFk,omitempty"`
	CreateTime                    string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime                    string `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *BannedDevice) Reset() {
	*x = BannedDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannedDevice) ProtoMessage() {}

func (x *BannedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannedDevice.ProtoReflect.Descriptor instead.
func (*BannedDevice) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{57}
}

func (x *BannedDevice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BannedDevice) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BannedDevice) GetDeviceFk() string {
	if x != nil {
		return x.DeviceFk
	}
	return ""
}

func (x *BannedDevice) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *BannedDevice) GetModeratorAuthorizationTokenFk() string {
	if x != nil {
		return x.ModeratorAuthorizationTokenFk
	}
	return ""
}

func (x *BannedDevice) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *BannedDevice) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type AuthorizationToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RefreshTokenFk string  `protobuf:"bytes,2,opt,name=refreshTokenFk,proto3" json:"refreshTokenFk,omitempty"`
	DeviceFk       string  `protobuf:"bytes,3,opt,name=deviceFk,proto3" json:"deviceFk,omitempty"`
	UserFk         string  `protobuf:"bytes,4,opt,name=userFk,proto3" json:"userFk,omitempty"`
	Valid          bool    `protobuf:"varint,5,opt,name=valid,proto3" json:"valid,omitempty"`
	App            AppType `protobuf:"varint,6,opt,name=app,proto3,enum=AppType" json:"app,omitempty"`
	AppVersion     string  `protobuf:"bytes,7,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	CreateTime     string  `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime     string  `protobuf:"bytes,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *AuthorizationToken) Reset() {
	*x = AuthorizationToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationToken) ProtoMessage() {}

func (x *AuthorizationToken) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationToken.ProtoReflect.Descriptor instead.
func (*AuthorizationToken) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{58}
}

func (x *AuthorizationToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthorizationToken) GetRefreshTokenFk() string {
	if x != nil {
		return x.RefreshTokenFk
	}
	return ""
}

func (x *AuthorizationToken) GetDeviceFk() string {
	if x != nil {
		return x.DeviceFk
	}
	return ""
}

func (x *AuthorizationToken) GetUserFk() string {
	if x != nil {
		return x.UserFk
	}
	return ""
}

func (x *AuthorizationToken) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *AuthorizationToken) GetApp() AppType {
	if x != nil {
		return x.App
	}
	return AppType_AppTypeUnspecified
}

func (x *AuthorizationToken) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *AuthorizationToken) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AuthorizationToken) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform      PlatformType `protobuf:"varint,2,opt,name=platform,proto3,enum=PlatformType" json:"platform,omitempty"`
	SystemVersion string       `protobuf:"bytes,3,opt,name=systemVersion,proto3" json:"systemVersion,omitempty"`
	Model         string       `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	App           AppType      `protobuf:"varint,5,opt,name=app,proto3,enum=AppType" json:"app,omitempty"`
	AppVersion    string       `protobuf:"bytes,6,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	Actual        bool         `protobuf:"varint,7,opt,name=actual,proto3" json:"actual,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{59}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetPlatform() PlatformType {
	if x != nil {
		return x.Platform
	}
	return PlatformType_PlatformTypeUnspecified
}

func (x *Session) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *Session) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Session) GetApp() AppType {
	if x != nil {
		return x.App
	}
	return AppType_AppTypeUnspecified
}

func (x *Session) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *Session) GetActual() bool {
	if x != nil {
		return x.Actual
	}
	return false
}

type RefreshToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserFk         string `protobuf:"bytes,2,opt,name=userFk,proto3" json:"userFk,omitempty"`
	DeviceFk       string `protobuf:"bytes,3,opt,name=deviceFk,proto3" json:"deviceFk,omitempty"`
	Valid          bool   `protobuf:"varint,4,opt,name=valid,proto3" json:"valid,omitempty"`
	ExpirationTime string `protobuf:"bytes,5,opt,name=expirationTime,proto3" json:"expirationTime,omitempty"`
	CreateTime     string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime     string `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *RefreshToken) Reset() {
	*x = RefreshToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshToken) ProtoMessage() {}

func (x *RefreshToken) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshToken.ProtoReflect.Descriptor instead.
func (*RefreshToken) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{60}
}

func (x *RefreshToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RefreshToken) GetUserFk() string {
	if x != nil {
		return x.UserFk
	}
	return ""
}

func (x *RefreshToken) GetDeviceFk() string {
	if x != nil {
		return x.DeviceFk
	}
	return ""
}

func (x *RefreshToken) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *RefreshToken) GetExpirationTime() string {
	if x != nil {
		return x.ExpirationTime
	}
	return ""
}

func (x *RefreshToken) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *RefreshToken) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform                 PlatformType `protobuf:"varint,2,opt,name=platform,proto3,enum=PlatformType" json:"platform,omitempty"`
	SystemVersion            string       `protobuf:"bytes,3,opt,name=systemVersion,proto3" json:"systemVersion,omitempty"`
	DeviceId                 string       `protobuf:"bytes,4,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	FirebaseCloudMessagingId string       `protobuf:"bytes,5,opt,name=firebaseCloudMessagingId,proto3" json:"firebaseCloudMessagingId,omitempty"`
	Model                    string       `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`
	CreateTime               string       `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime               string       `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{61}
}

func (x *Device) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Device) GetPlatform() PlatformType {
	if x != nil {
		return x.Platform
	}
	return PlatformType_PlatformTypeUnspecified
}

func (x *Device) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *Device) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Device) GetFirebaseCloudMessagingId() string {
	if x != nil {
		return x.FirebaseCloudMessagingId
	}
	return ""
}

func (x *Device) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Device) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Device) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tag            string                      `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	ResidenceType  UserAddress_UserAddressType `protobuf:"varint,3,opt,name=residenceType,proto3,enum=UserAddress_UserAddressType" json:"residenceType,omitempty"`
	BuildingNumber string                      `protobuf:"bytes,4,opt,name=buildingNumber,proto3" json:"buildingNumber,omitempty"`
	HouseNumber    string                      `protobuf:"bytes,5,opt,name=houseNumber,proto3" json:"houseNumber,omitempty"`
	Coordinates    *Point                      `protobuf:"bytes,6,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	Description    string                      `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	UserFk         string                      `protobuf:"bytes,8,opt,name=userFk,proto3" json:"userFk,omitempty"`
	ProvinceFk     string                      `protobuf:"bytes,9,opt,name=provinceFk,proto3" json:"provinceFk,omitempty"`
	MunicipalityFk string                      `protobuf:"bytes,10,opt,name=municipalityFk,proto3" json:"municipalityFk,omitempty"`
	CreateTime     string                      `protobuf:"bytes,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime     string                      `protobuf:"bytes,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserAddress) Reset() {
	*x = UserAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddress) ProtoMessage() {}

func (x *UserAddress) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddress.ProtoReflect.Descriptor instead.
func (*UserAddress) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{62}
}

func (x *UserAddress) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAddress) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *UserAddress) GetResidenceType() UserAddress_UserAddressType {
	if x != nil {
		return x.ResidenceType
	}
	return UserAddress_UNSPECIFIED
}

func (x *UserAddress) GetBuildingNumber() string {
	if x != nil {
		return x.BuildingNumber
	}
	return ""
}

func (x *UserAddress) GetHouseNumber() string {
	if x != nil {
		return x.HouseNumber
	}
	return ""
}

func (x *UserAddress) GetCoordinates() *Point {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *UserAddress) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserAddress) GetUserFk() string {
	if x != nil {
		return x.UserFk
	}
	return ""
}

func (x *UserAddress) GetProvinceFk() string {
	if x != nil {
		return x.ProvinceFk
	}
	return ""
}

func (x *UserAddress) GetMunicipalityFk() string {
	if x != nil {
		return x.MunicipalityFk
	}
	return ""
}

func (x *UserAddress) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserAddress) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PermissionFk string `protobuf:"bytes,3,opt,name=permissionFk,proto3" json:"permissionFk,omitempty"`
	UserFk       string `protobuf:"bytes,4,opt,name=userFk,proto3" json:"userFk,omitempty"`
	BusinessFk   string `protobuf:"bytes,5,opt,name=businessFk,proto3" json:"businessFk,omitempty"`
	CreateTime   string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime   string `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserPermission) Reset() {
	*x = UserPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermission) ProtoMessage() {}

func (x *UserPermission) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermission.ProtoReflect.Descriptor instead.
func (*UserPermission) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{63}
}

func (x *UserPermission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserPermission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserPermission) GetPermissionFk() string {
	if x != nil {
		return x.PermissionFk
	}
	return ""
}

func (x *UserPermission) GetUserFk() string {
	if x != nil {
		return x.UserFk
	}
	return ""
}

func (x *UserPermission) GetBusinessFk() string {
	if x != nil {
		return x.BusinessFk
	}
	return ""
}

func (x *UserPermission) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserPermission) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type Polygon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinates []float64 `protobuf:"fixed64,1,rep,packed,name=coordinates,proto3" json:"coordinates,omitempty"`
}

func (x *Polygon) Reset() {
	*x = Polygon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Polygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Polygon) ProtoMessage() {}

func (x *Polygon) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Polygon.ProtoReflect.Descriptor instead.
func (*Polygon) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{64}
}

func (x *Polygon) GetCoordinates() []float64 {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

type VerificationCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code       string               `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Email      string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Type       VerificationCodeType `protobuf:"varint,4,opt,name=type,proto3,enum=VerificationCodeType" json:"type,omitempty"`
	DeviceId   string               `protobuf:"bytes,5,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	CreateTime string               `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime string               `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *VerificationCode) Reset() {
	*x = VerificationCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationCode) ProtoMessage() {}

func (x *VerificationCode) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationCode.ProtoReflect.Descriptor instead.
func (*VerificationCode) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{65}
}

func (x *VerificationCode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VerificationCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *VerificationCode) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *VerificationCode) GetType() VerificationCodeType {
	if x != nil {
		return x.Type
	}
	return VerificationCodeType_VerificationCodeTypeUnspecified
}

func (x *VerificationCode) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *VerificationCode) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *VerificationCode) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_main_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_main_proto_rawDescGZIP(), []int{66}
}

func (x *Point) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Point) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

var File_main_proto protoreflect.FileDescriptor

var file_main_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38,
	0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x30, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x68, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x22, 0x4f, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x30, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x6b, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x22, 0x4f, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0x8d, 0x04, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42, 0x6c, 0x75,
	0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x12, 0x3a, 0x0a, 0x18, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a,
	0x0f, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x38, 0x0a, 0x17, 0x6c, 0x6f, 0x77, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x3b, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x56, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6b, 0x22, 0x73, 0x0a, 0x13, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x22, 0x6a, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x12,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xba, 0x02, 0x0a,
	0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x46, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x46, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x46, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6b, 0x12, 0x4f, 0x0a, 0x16, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x16, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x6e, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x4f, 0x0a, 0x16, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x6e,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x6e, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x16, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x22, 0x87, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x46, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x46, 0x6b,
	0x12, 0x38, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x4b, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xa0, 0x02, 0x0a, 0x0b, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x46, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x46, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46,
	0x6b, 0x12, 0x4f, 0x0a, 0x16, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x6e, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x16, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x4f,
	0x0a, 0x16, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x16, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d,
	0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x3c, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x42, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c,
	0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x7f, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x2f, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x22, 0x38, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x69, 0x0a,
	0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x5f, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x57, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22,
	0x5f, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x22, 0x2f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x7a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x5c, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x10,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x38,
	0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x5f, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x73, 0x0a, 0x0d, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x7f,
	0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22,
	0x11, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x2e, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x22, 0x8c, 0x04, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x46, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x46, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x46, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x46, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46,
	0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46,
	0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xd2, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x46, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x46, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x46, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x46, 0x6b, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb9, 0x04, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x69, 0x67,
	0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x3a, 0x0a,
	0x18, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x18, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x38, 0x0a, 0x17, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4c,
	0x65, 0x67, 0x61, 0x6c, 0x41, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x41, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x31, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xbf, 0x07, 0x0a, 0x08, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x68,
	0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x3a, 0x0a, 0x18, 0x68, 0x69, 0x67, 0x68, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x68, 0x69, 0x67, 0x68, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x38, 0x0a,
	0x17, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42,
	0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42, 0x6c, 0x75, 0x72, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x22, 0x0a, 0x07, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x07, 0x70, 0x6f,
	0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x65, 0x61, 0x64, 0x4d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x6c, 0x65, 0x61, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x6f, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x12, 0x22, 0x0a,
	0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x46, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x46, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x46, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x46, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6b, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x46, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x22, 0x9b, 0x05, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x46, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x46, 0x6b, 0x12, 0x36, 0x0a, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x46, 0x6b,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x46, 0x6b, 0x12, 0x2a,
	0x0a, 0x10, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x3a, 0x0a, 0x18, 0x68, 0x69,
	0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c,
	0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x68, 0x69,
	0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c,
	0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x12, 0x38, 0x0a, 0x17, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42, 0x6c,
	0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x22, 0xf7, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42,
	0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x8b, 0x03, 0x0a,
	0x09, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x46, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x46, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x69,
	0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x3a,
	0x0a, 0x18, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x18, 0x68, 0x69, 0x67, 0x68, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x12, 0x38, 0x0a, 0x17, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x11,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf2, 0x01, 0x0a, 0x0a, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x46, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x46, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x44, 0x0a, 0x1d, 0x6d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1d, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6b, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xfe, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x1d, 0x6d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1d, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6b,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x92, 0x02, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6b, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x46, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x46, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x03, 0x61, 0x70, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x03, 0x61, 0x70, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x22, 0xd0, 0x01, 0x0a,
	0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x46, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x46, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x97, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x66, 0x69, 0x72, 0x65, 0x62,
	0x61, 0x73, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x66, 0x69, 0x72, 0x65, 0x62,
	0x61, 0x73, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe8, 0x03, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x42, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0d, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0b, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x46, 0x6b, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x46, 0x6b, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x46, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x46, 0x6b, 0x12, 0x26, 0x0a,
	0x0e, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6b, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x46, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x4f, 0x55,
	0x53, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x50, 0x41, 0x52, 0x54, 0x41, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x02, 0x22, 0xd0, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x6b, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x46, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x46, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x46, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x46, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x07, 0x50, 0x6f, 0x6c, 0x79, 0x67,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x05, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x2a, 0x55, 0x0a,
	0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x4d, 0x6f, 0x72, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x4d, 0x6f,
	0x72, 0x65, 0x10, 0x02, 0x2a, 0x68, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x10, 0x03, 0x2a, 0x5f,
	0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x19, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x02, 0x12,
	0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x10, 0x03, 0x2a,
	0x67, 0x0a, 0x12, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x02, 0x2a, 0x41, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4f, 0x53, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10, 0x02, 0x2a, 0x3b, 0x0a, 0x07, 0x41,
	0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x70, 0x70, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x41, 0x70, 0x70, 0x10, 0x02, 0x2a, 0x68, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x10, 0x04, 0x2a, 0x4b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x54, 0x6f, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x48, 0x6f, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x10, 0x02, 0x2a,
	0x47, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x02, 0x32, 0x96, 0x07, 0x0a, 0x15, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x52, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x06,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x0e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x69, 0x67,
	0x6e, 0x55, 0x70, 0x12, 0x0e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75,
	0x74, 0x12, 0x0f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x2e, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x32, 0x74, 0x0a, 0x0f, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x64, 0x12, 0x0c, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa9, 0x01, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0x46, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x77, 0x0a, 0x0c, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x10, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x32, 0x8c, 0x01, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0x82, 0x01, 0x0a, 0x14, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x21, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x44, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x3c,
	0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x13, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x22, 0x5a, 0x20,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6e, 0x69, 0x61,
	0x72, 0x6d, 0x61, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_main_proto_rawDescOnce sync.Once
	file_main_proto_rawDescData = file_main_proto_rawDesc
)

func file_main_proto_rawDescGZIP() []byte {
	file_main_proto_rawDescOnce.Do(func() {
		file_main_proto_rawDescData = protoimpl.X.CompressGZIP(file_main_proto_rawDescData)
	})
	return file_main_proto_rawDescData
}

var file_main_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
var file_main_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_main_proto_goTypes = []interface{}{
	(SearchMunicipalityType)(0),               // 0: SearchMunicipalityType
	(VerificationCodeType)(0),                 // 1: VerificationCodeType
	(ItemStatusType)(0),                       // 2: ItemStatusType
	(BusinessStatusType)(0),                   // 3: BusinessStatusType
	(PlatformType)(0),                         // 4: PlatformType
	(AppType)(0),                              // 5: AppType
	(OrderStatusType)(0),                      // 6: OrderStatusType
	(DeliveryType)(0),                         // 7: DeliveryType
	(ResidenceType)(0),                        // 8: ResidenceType
	(HealthCheckResponse_ServingStatus)(0),    // 9: HealthCheckResponse.ServingStatus
	(UserAddress_UserAddressType)(0),          // 10: UserAddress.UserAddressType
	(*GetOrderRequest)(nil),                   // 11: GetOrderRequest
	(*GetOrderResponse)(nil),                  // 12: GetOrderResponse
	(*ListOrderRequest)(nil),                  // 13: ListOrderRequest
	(*ListOrderResponse)(nil),                 // 14: ListOrderResponse
	(*GetCartItemRequest)(nil),                // 15: GetCartItemRequest
	(*GetCartItemResponse)(nil),               // 16: GetCartItemResponse
	(*ListCartItemRequest)(nil),               // 17: ListCartItemRequest
	(*ListCartItemResponse)(nil),              // 18: ListCartItemResponse
	(*UpdateUserRequest)(nil),                 // 19: UpdateUserRequest
	(*UpdateUserResponse)(nil),                // 20: UpdateUserResponse
	(*ListSessionRequest)(nil),                // 21: ListSessionRequest
	(*ListSessionResponse)(nil),               // 22: ListSessionResponse
	(*SignOutRequest)(nil),                    // 23: SignOutRequest
	(*RefreshTokenRequest)(nil),               // 24: RefreshTokenRequest
	(*RefreshTokenResponse)(nil),              // 25: RefreshTokenResponse
	(*SearchItemRequest)(nil),                 // 26: SearchItemRequest
	(*SearchItemResponse)(nil),                // 27: SearchItemResponse
	(*ListItemRequest)(nil),                   // 28: ListItemRequest
	(*ListItemResponse)(nil),                  // 29: ListItemResponse
	(*GetItemRequest)(nil),                    // 30: GetItemRequest
	(*GetItemResponse)(nil),                   // 31: GetItemResponse
	(*FeedRequest)(nil),                       // 32: FeedRequest
	(*FeedResponse)(nil),                      // 33: FeedResponse
	(*GetBusinessRequest)(nil),                // 34: GetBusinessRequest
	(*GetBusinessResponse)(nil),               // 35: GetBusinessResponse
	(*GetPresignedPutUserAvatarRequest)(nil),  // 36: GetPresignedPutUserAvatarRequest
	(*GetPresignedPutUserAvatarResponse)(nil), // 37: GetPresignedPutUserAvatarResponse
	(*SignUpRequest)(nil),                     // 38: SignUpRequest
	(*SignUpResponse)(nil),                    // 39: SignUpResponse
	(*UserExistsStreamRequest)(nil),           // 40: UserExistsStreamRequest
	(*UserExistsStreamResponse)(nil),          // 41: UserExistsStreamResponse
	(*UserExistsRequest)(nil),                 // 42: UserExistsRequest
	(*CheckSessionResponse)(nil),              // 43: CheckSessionResponse
	(*CheckSessionRequest)(nil),               // 44: CheckSessionRequest
	(*CreateVerificationCodeRequest)(nil),     // 45: CreateVerificationCodeRequest
	(*CreateVerificationCodeResponse)(nil),    // 46: CreateVerificationCodeResponse
	(*ListVerificationCodeRequest)(nil),       // 47: ListVerificationCodeRequest
	(*ListVerificationCodeResponse)(nil),      // 48: ListVerificationCodeResponse
	(*DeleteVerificationCodeRequest)(nil),     // 49: DeleteVerificationCodeRequest
	(*GetVerificationCodeRequest)(nil),        // 50: GetVerificationCodeRequest
	(*GetVerificationCodeResponse)(nil),       // 51: GetVerificationCodeResponse
	(*UpdateVerificationCodeRequest)(nil),     // 52: UpdateVerificationCodeRequest
	(*UpdateVerificationCodeResponse)(nil),    // 53: UpdateVerificationCodeResponse
	(*SignInRequest)(nil),                     // 54: SignInRequest
	(*SignInResponse)(nil),                    // 55: SignInResponse
	(*HostnameRequest)(nil),                   // 56: HostnameRequest
	(*HostnameResponse)(nil),                  // 57: HostnameResponse
	(*HealthCheckRequest)(nil),                // 58: HealthCheckRequest
	(*HealthCheckResponse)(nil),               // 59: HealthCheckResponse
	(*Order)(nil),                             // 60: Order
	(*CartItem)(nil),                          // 61: CartItem
	(*User)(nil),                              // 62: User
	(*Business)(nil),                          // 63: Business
	(*Item)(nil),                              // 64: Item
	(*SearchItem)(nil),                        // 65: SearchItem
	(*ItemPhoto)(nil),                         // 66: ItemPhoto
	(*BannedUser)(nil),                        // 67: BannedUser
	(*BannedDevice)(nil),                      // 68: BannedDevice
	(*AuthorizationToken)(nil),                // 69: AuthorizationToken
	(*Session)(nil),                           // 70: Session
	(*RefreshToken)(nil),                      // 71: RefreshToken
	(*Device)(nil),                            // 72: Device
	(*UserAddress)(nil),                       // 73: UserAddress
	(*UserPermission)(nil),                    // 74: UserPermission
	(*Polygon)(nil),                           // 75: Polygon
	(*VerificationCode)(nil),                  // 76: VerificationCode
	(*Point)(nil),                             // 77: Point
	(*fieldmaskpb.FieldMask)(nil),             // 78: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),                     // 79: google.protobuf.Empty
}
var file_main_proto_depIdxs = []int32{
	78, // 0: GetOrderRequest.fieldMask:type_name -> google.protobuf.FieldMask
	60, // 1: GetOrderResponse.order:type_name -> Order
	78, // 2: ListOrderRequest.fieldMask:type_name -> google.protobuf.FieldMask
	60, // 3: ListOrderResponse.orders:type_name -> Order
	78, // 4: GetCartItemRequest.fieldMask:type_name -> google.protobuf.FieldMask
	64, // 5: GetCartItemResponse.item:type_name -> Item
	78, // 6: ListCartItemRequest.fieldMask:type_name -> google.protobuf.FieldMask
	64, // 7: ListCartItemResponse.items:type_name -> Item
	78, // 8: UpdateUserRequest.fieldMask:type_name -> google.protobuf.FieldMask
	78, // 9: UpdateUserRequest.updateMask:type_name -> google.protobuf.FieldMask
	62, // 10: UpdateUserResponse.user:type_name -> User
	78, // 11: ListSessionRequest.fieldMask:type_name -> google.protobuf.FieldMask
	70, // 12: ListSessionResponse.sessions:type_name -> Session
	78, // 13: RefreshTokenRequest.fieldMask:type_name -> google.protobuf.FieldMask
	0,  // 14: SearchItemRequest.searchMunicipalityType:type_name -> SearchMunicipalityType
	77, // 15: SearchItemRequest.location:type_name -> Point
	78, // 16: SearchItemRequest.fieldMask:type_name -> google.protobuf.FieldMask
	65, // 17: SearchItemResponse.items:type_name -> SearchItem
	0,  // 18: SearchItemResponse.searchMunicipalityType:type_name -> SearchMunicipalityType
	78, // 19: ListItemRequest.fieldMask:type_name -> google.protobuf.FieldMask
	64, // 20: ListItemResponse.items:type_name -> Item
	77, // 21: GetItemRequest.location:type_name -> Point
	78, // 22: GetItemRequest.fieldMask:type_name -> google.protobuf.FieldMask
	64, // 23: GetItemResponse.item:type_name -> Item
	77, // 24: FeedRequest.location:type_name -> Point
	0,  // 25: FeedRequest.searchMunicipalityType:type_name -> SearchMunicipalityType
	78, // 26: FeedRequest.fieldMask:type_name -> google.protobuf.FieldMask
	63, // 27: FeedResponse.businesses:type_name -> Business
	0,  // 28: FeedResponse.searchMunicipalityType:type_name -> SearchMunicipalityType
	78, // 29: GetBusinessRequest.fieldMask:type_name -> google.protobuf.FieldMask
	63, // 30: GetBusinessResponse.business:type_name -> Business
	62, // 31: SignUpResponse.user:type_name -> User
	1,  // 32: CreateVerificationCodeRequest.type:type_name -> VerificationCodeType
	78, // 33: CreateVerificationCodeRequest.fieldMask:type_name -> google.protobuf.FieldMask
	76, // 34: CreateVerificationCodeResponse.verificationCode:type_name -> VerificationCode
	78, // 35: ListVerificationCodeRequest.fieldMask:type_name -> google.protobuf.FieldMask
	76, // 36: ListVerificationCodeResponse.verificationCodes:type_name -> VerificationCode
	78, // 37: GetVerificationCodeRequest.fieldMask:type_name -> google.protobuf.FieldMask
	76, // 38: GetVerificationCodeResponse.verificationCode:type_name -> VerificationCode
	1,  // 39: UpdateVerificationCodeRequest.type:type_name -> VerificationCodeType
	78, // 40: UpdateVerificationCodeRequest.fieldMask:type_name -> google.protobuf.FieldMask
	76, // 41: UpdateVerificationCodeResponse.verificationCode:type_name -> VerificationCode
	78, // 42: SignInRequest.fieldMask:type_name -> google.protobuf.FieldMask
	62, // 43: SignInResponse.user:type_name -> User
	9,  // 44: HealthCheckResponse.status:type_name -> HealthCheckResponse.ServingStatus
	6,  // 45: Order.status:type_name -> OrderStatusType
	7,  // 46: Order.deliveryType:type_name -> DeliveryType
	8,  // 47: Order.residenceType:type_name -> ResidenceType
	77, // 48: Order.coordinates:type_name -> Point
	73, // 49: User.userAddress:type_name -> UserAddress
	74, // 50: User.permissions:type_name -> UserPermission
	75, // 51: Business.polygon:type_name -> Polygon
	77, // 52: Business.coordinates:type_name -> Point
	3,  // 53: Business.status:type_name -> BusinessStatusType
	2,  // 54: Item.status:type_name -> ItemStatusType
	66, // 55: Item.photos:type_name -> ItemPhoto
	2,  // 56: SearchItem.status:type_name -> ItemStatusType
	5,  // 57: AuthorizationToken.app:type_name -> AppType
	4,  // 58: Session.platform:type_name -> PlatformType
	5,  // 59: Session.app:type_name -> AppType
	4,  // 60: Device.platform:type_name -> PlatformType
	10, // 61: UserAddress.residenceType:type_name -> UserAddress.UserAddressType
	77, // 62: UserAddress.coordinates:type_name -> Point
	1,  // 63: VerificationCode.type:type_name -> VerificationCodeType
	45, // 64: AuthenticationService.CreateVerificationCode:input_type -> CreateVerificationCodeRequest
	47, // 65: AuthenticationService.ListVerificationCode:input_type -> ListVerificationCodeRequest
	50, // 66: AuthenticationService.GetVerificationCode:input_type -> GetVerificationCodeRequest
	52, // 67: AuthenticationService.UpdateVerificationCode:input_type -> UpdateVerificationCodeRequest
	49, // 68: AuthenticationService.DeleteVerificationCode:input_type -> DeleteVerificationCodeRequest
	54, // 69: AuthenticationService.SignIn:input_type -> SignInRequest
	38, // 70: AuthenticationService.SignUp:input_type -> SignUpRequest
	23, // 71: AuthenticationService.SignOut:input_type -> SignOutRequest
	44, // 72: AuthenticationService.CheckSession:input_type -> CheckSessionRequest
	24, // 73: AuthenticationService.RefreshToken:input_type -> RefreshTokenRequest
	42, // 74: AuthenticationService.UserExists:input_type -> UserExistsRequest
	40, // 75: AuthenticationService.UserExistsStream:input_type -> UserExistsStreamRequest
	21, // 76: AuthenticationService.ListSession:input_type -> ListSessionRequest
	32, // 77: BusinessService.Feed:input_type -> FeedRequest
	34, // 78: BusinessService.GetBusiness:input_type -> GetBusinessRequest
	28, // 79: ItemService.ListItem:input_type -> ListItemRequest
	30, // 80: ItemService.GetItem:input_type -> GetItemRequest
	26, // 81: ItemService.SearchItem:input_type -> SearchItemRequest
	19, // 82: UserService.UpdateUser:input_type -> UpdateUserRequest
	13, // 83: OrderService.ListOrder:input_type -> ListOrderRequest
	11, // 84: OrderService.GetOrder:input_type -> GetOrderRequest
	17, // 85: CartItemService.ListCartItem:input_type -> ListCartItemRequest
	15, // 86: CartItemService.GetCartItem:input_type -> GetCartItemRequest
	36, // 87: ObjectStorageService.GetPresignedPutObjectUserAvatar:input_type -> GetPresignedPutUserAvatarRequest
	56, // 88: HostnameService.hostname:input_type -> HostnameRequest
	58, // 89: Health.Check:input_type -> HealthCheckRequest
	79, // 90: AuthenticationService.CreateVerificationCode:output_type -> google.protobuf.Empty
	48, // 91: AuthenticationService.ListVerificationCode:output_type -> ListVerificationCodeResponse
	79, // 92: AuthenticationService.GetVerificationCode:output_type -> google.protobuf.Empty
	53, // 93: AuthenticationService.UpdateVerificationCode:output_type -> UpdateVerificationCodeResponse
	79, // 94: AuthenticationService.DeleteVerificationCode:output_type -> google.protobuf.Empty
	55, // 95: AuthenticationService.SignIn:output_type -> SignInResponse
	39, // 96: AuthenticationService.SignUp:output_type -> SignUpResponse
	79, // 97: AuthenticationService.SignOut:output_type -> google.protobuf.Empty
	43, // 98: AuthenticationService.CheckSession:output_type -> CheckSessionResponse
	25, // 99: AuthenticationService.RefreshToken:output_type -> RefreshTokenResponse
	79, // 100: AuthenticationService.UserExists:output_type -> google.protobuf.Empty
	41, // 101: AuthenticationService.UserExistsStream:output_type -> UserExistsStreamResponse
	22, // 102: AuthenticationService.ListSession:output_type -> ListSessionResponse
	33, // 103: BusinessService.Feed:output_type -> FeedResponse
	35, // 104: BusinessService.GetBusiness:output_type -> GetBusinessResponse
	29, // 105: ItemService.ListItem:output_type -> ListItemResponse
	31, // 106: ItemService.GetItem:output_type -> GetItemResponse
	27, // 107: ItemService.SearchItem:output_type -> SearchItemResponse
	20, // 108: UserService.UpdateUser:output_type -> UpdateUserResponse
	14, // 109: OrderService.ListOrder:output_type -> ListOrderResponse
	12, // 110: OrderService.GetOrder:output_type -> GetOrderResponse
	18, // 111: CartItemService.ListCartItem:output_type -> ListCartItemResponse
	16, // 112: CartItemService.GetCartItem:output_type -> GetCartItemResponse
	37, // 113: ObjectStorageService.GetPresignedPutObjectUserAvatar:output_type -> GetPresignedPutUserAvatarResponse
	57, // 114: HostnameService.hostname:output_type -> HostnameResponse
	59, // 115: Health.Check:output_type -> HealthCheckResponse
	90, // [90:116] is the sub-list for method output_type
	64, // [64:90] is the sub-list for method input_type
	64, // [64:64] is the sub-list for extension type_name
	64, // [64:64] is the sub-list for extension extendee
	0,  // [0:64] is the sub-list for field type_name
}

func init() { file_main_proto_init() }
func file_main_proto_init() {
	if File_main_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_main_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCartItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCartItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCartItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCartItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPresignedPutUserAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPresignedPutUserAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserExistsStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserExistsStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVerificationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVerificationCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVerificationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVerificationCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVerificationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerificationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerificationCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVerificationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVerificationCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostnameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostnameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Business); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannedUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannedDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Polygon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_main_proto_rawDesc,
			NumEnums:      11,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   9,
		},
		GoTypes:           file_main_proto_goTypes,
		DependencyIndexes: file_main_proto_depIdxs,
		EnumInfos:         file_main_proto_enumTypes,
		MessageInfos:      file_main_proto_msgTypes,
	}.Build()
	File_main_proto = out.File
	file_main_proto_rawDesc = nil
	file_main_proto_goTypes = nil
	file_main_proto_depIdxs = nil
}
